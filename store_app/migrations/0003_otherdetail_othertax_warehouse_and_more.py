# Generated by Django 4.2.1 on 2024-02-23 07:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import store_app.models.product


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('store_app', '0002_category_discount_extradetails_tag_variant_tax_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OtherDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'other detail',
                'db_table': 'other_detail',
            },
        ),
        migrations.CreateModel(
            name='OtherTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
            options={
                'verbose_name_plural': 'other_taxes',
                'db_table': 'other_tax',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('conatact', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('gst_num', models.CharField(max_length=100)),
                ('total_capacity', models.IntegerField(default=0)),
                ('available_capacity', models.IntegerField(default=0)),
                ('fk_other_detail',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_app.otherdetail',
                                   verbose_name='Other Details')),
                ('fk_tag', models.ManyToManyField(blank=True, null=True, to='store_app.tag')),
                ('fk_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                              verbose_name='Warehouse User')),
            ],
            options={
                'verbose_name_plural': 'warehouse',
                'db_table': 'warehouse',
            },
        ),
        migrations.AlterModelOptions(
            name='discount',
            options={'verbose_name_plural': 'discounts'},
        ),
        migrations.AlterField(
            model_name='customer',
            name='mobile_number',
            field=models.CharField(max_length=15),
        ),
        migrations.AlterModelTable(
            name='discount',
            table='discount',
        ),
        migrations.CreateModel(
            name='WarehouseInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_quantity', models.IntegerField(default=0)),
                ('allotted_quantity', models.IntegerField(default=0)),
                ('total_quantity', models.IntegerField(default=0)),
                ('sold_quantity', models.IntegerField(default=0)),
                ('product_total_valuation', models.IntegerField(default=0)),
                ('on_hand', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
                ('fk_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_app.product',
                                                 verbose_name='Warehouse Inventory Product')),
                ('fk_tag', models.ManyToManyField(blank=True, null=True, to='store_app.tag', verbose_name='Tag')),
                ('fk_warehouse',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_app.warehouse',
                                   verbose_name='Warehouse')),
                ('updated_by',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                   verbose_name='Updated by user')),
            ],
            options={
                'verbose_name_plural': 'warehouse inventory',
                'db_table': 'warehouse_inventory',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to=store_app.models.product.product_image_upload_path)),
                ('fk_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_app.product',
                                                 verbose_name='Product')),
                ('fk_tag', models.ManyToManyField(to='store_app.tag')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fk_product',
                 models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='store_app.product')),
            ],
            options={
                'verbose_name_plural': 'order details',
                'db_table': 'order_detail',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='sub total')),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='final bill price')),
                ('fk_customer',
                 models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='store_app.customer',
                                   verbose_name='Customer')),
                ('fk_discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                                  to='store_app.discount', verbose_name='discount')),
                ('fk_order_detail',
                 models.ManyToManyField(to='store_app.orderdetail', verbose_name='product order detail')),
                ('fk_other_tax',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                   to='store_app.othertax', verbose_name='other tax')),
                ('fk_tag', models.ManyToManyField(to='store_app.tag', verbose_name='tag')),
                ('fk_warehouse',
                 models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='store_app.warehouse',
                                   verbose_name='Warehouese')),
            ],
            options={
                'verbose_name_plural': 'orders',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('available_quantity', models.IntegerField(default=0)),
                ('allotted_quantity', models.IntegerField(default=0)),
                ('total_quantity', models.IntegerField(default=0)),
                ('sold_quantity', models.IntegerField(default=0)),
                ('damage_quantity', models.IntegerField(default=0)),
                ('on_hand', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fk_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_app.product',
                                                 verbose_name='Log of inventory product')),
                ('fk_tag', models.ManyToManyField(to='store_app.tag')),
                ('fk_warehouse',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_app.warehouse',
                                   verbose_name='Log of warehouse')),
                ('updated_by',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                   verbose_name='Updated by User')),
            ],
            options={
                'verbose_name_plural': 'inventory log',
                'db_table': 'inventory_log',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_quantity', models.IntegerField(default=0)),
                ('allotted_quantity', models.IntegerField(default=0)),
                ('total_quantity', models.IntegerField(default=0)),
                ('sold_quantity', models.IntegerField(default=0)),
                ('total_value', models.IntegerField(default=0)),
                ('on_hand', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField()),
                ('fk_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_app.product',
                                                 verbose_name='Inventory Product')),
            ],
            options={
                'verbose_name_plural': 'inventory',
                'db_table': 'inventory',
            },
        ),
    ]
